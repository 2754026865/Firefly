---
import { spineModelConfig, live2dModelConfig } from "../../config/pioConfig";
import SpineModel from "./SpineModel.astro";
import Live2DModel from "./Live2DModel.astro";

// 检查是否有任何模型启用
const hasAnyModelEnabled = spineModelConfig.enable || live2dModelConfig.enable;
---

{
  hasAnyModelEnabled && (
    <>
      {spineModelConfig.enable && <SpineModel />}
      {live2dModelConfig.enable && <Live2DModel />}
    </>
  )
}

<!-- 全局样式 -->
<style is:global>
  /* 通用模型容器样式 */
  .spine-model-container,
  .live2d-container {
    transition: all 0.3s ease;
    cursor: pointer;
    user-select: none;
  }

  .spine-model-container:hover,
  .live2d-container:hover {
    transform: scale(1.02);
  }

  .spine-model-container:active,
  .live2d-container:active {
    transform: scale(0.98);
  }

  /* 响应式隐藏 */
  @media (max-width: 768px) {
    .spine-model-container,
    .live2d-container {
      display: none !important;
    }
  }

  /* 针对不同位置的特殊样式 */
  .spine-model-container[data-position="bottom-left"],
  .live2d-container[data-position="bottom-left"] {
    transform-origin: bottom left;
  }

  .spine-model-container[data-position="bottom-right"],
  .live2d-container[data-position="bottom-right"] {
    transform-origin: bottom right;
  }

  .spine-model-container[data-position="top-left"],
  .live2d-container[data-position="top-left"] {
    transform-origin: top left;
  }

  .spine-model-container[data-position="top-right"],
  .live2d-container[data-position="top-right"] {
    transform-origin: top right;
  }

  /* 加载状态指示器 */
  .model-loading {
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    border-radius: 8px;
    font-size: 14px;
  }

  .model-loading::before {
    content: "🤖";
    margin-right: 8px;
    animation: bounce 1s infinite;
  }

  @keyframes bounce {
    0%,
    20%,
    50%,
    80%,
    100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-10px);
    }
    60% {
      transform: translateY(-5px);
    }
  }
</style>

<script define:vars={{ spineModelConfig, live2dModelConfig }}>
  // 模型管理器全局脚本
  window.modelManager = {
    spineConfig: spineModelConfig,
    live2dConfig: live2dModelConfig,

    // 获取启用的模型类型
    getEnabledModels() {
      const enabled = [];
      if (spineModelConfig.enable) enabled.push("spine");
      if (live2dModelConfig.enable) enabled.push("live2d");
      return enabled;
    },

    // 检查是否有任何模型启用
    hasAnyModelEnabled() {
      return spineModelConfig.enable || live2dModelConfig.enable;
    },

    // 获取指定类型的容器元素
    getContainer(modelType) {
      return document.getElementById(
        modelType === "spine" ? "spine-model-container" : "live2d-container"
      );
    },

    // 显示/隐藏指定模型
    toggle(modelType, show = null) {
      const container = this.getContainer(modelType);
      if (container) {
        const shouldShow =
          show !== null ? show : container.style.display === "none";
        container.style.display = shouldShow ? "block" : "none";
        console.log(`${modelType} model ${shouldShow ? "shown" : "hidden"}`);
      }
    },

    // 显示/隐藏所有模型
    toggleAll(show = null) {
      this.getEnabledModels().forEach((modelType) => {
        this.toggle(modelType, show);
      });
    },

    // 调整指定模型位置
    setPosition(modelType, corner, offsetX = 20, offsetY = 20) {
      const container = this.getContainer(modelType);
      if (container) {
        // 清除旧的位置样式
        container.style.left = "auto";
        container.style.right = "auto";
        container.style.top = "auto";
        container.style.bottom = "auto";

        // 设置新的位置
        if (corner.includes("left")) {
          container.style.left = `${offsetX}px`;
        } else {
          container.style.right = `${offsetX}px`;
        }

        if (corner.includes("top")) {
          container.style.top = `${offsetY}px`;
        } else {
          container.style.bottom = `${offsetY}px`;
        }

        // 设置数据属性用于CSS样式
        container.setAttribute("data-position", corner);

        console.log(
          `${modelType} model position set to ${corner} (${offsetX}, ${offsetY})`
        );
      }
    },

    // 获取指定模型的配置
    getConfig(modelType) {
      return modelType === "spine" ? this.spineConfig : this.live2dConfig;
    },
  };

  // 页面加载完成后初始化
  document.addEventListener("DOMContentLoaded", () => {
    const enabledModels = window.modelManager.getEnabledModels();
    console.log(
      `Model Manager initialized with models: ${enabledModels.join(", ")}`
    );

    // 应用每个启用模型的位置设置
    enabledModels.forEach((modelType) => {
      const config = window.modelManager.getConfig(modelType);
      const { corner, offsetX, offsetY } = config.position;
      window.modelManager.setPosition(
        modelType,
        corner,
        offsetX || 20,
        offsetY || 20
      );
    });
  });
</script>
